{"version":3,"sources":["common/header.module.css","Home/components/HomeArray.module.css","Home/components/tickDay.module.css","Home/components/userSchedule.module.css","global.module.css","common/logo.webp","common/Header.jsx","common/MonthPicker.jsx","Home/components/TickDay.jsx","Home/components/UserSchedule.jsx","Home/components/HomeArray.jsx","Home/Home.jsx","Login/components/LoginComponent.jsx","Login/components/LogoutComponent.jsx","Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","Navbar","className","styles","navbar","variant","expand","collapseOnSelect","to","Brand","img","src","Logo","alt","Toggle","aria-controls","Collapse","id","Nav","Link","loginStatus","MonthPicker","dateFormat","locale","selected","onChange","date","handleChangeDate","showMonthYearPicker","TickDay","td","onClick","isClickable","updateUser","user","selectedDate","indexJour","status","style","background","changeStyle","UserSchedule","checkDayStatus","nonWorkingDays","currentCaseDate","Date","UTC","indexOfYear","indexOfMonth","isWeekend","i","length","compareAsc","parseISO","firstName","lastName","tickDayArray","nbDays","push","key","uuidv4","isActive","renderRowContent","HomeArray","history","useHistory","useState","userData","setUserData","useEffect","currentAuth","fetch","method","credentials","then","res","json","result","userEmail","loadedData","foundUsers","forEach","element","userIndex","findIndex","email","splice","catch","error","console","log","month","previousStatus","userDataCopy","newStatus","updateDate","jourPoseIndex","toISOString","headers","body","JSON","stringify","Error","previous","err","Table","bordered","hover","responsive","size","headerRowArray","th","toLocaleString","minimumIntegerDigits","useGrouping","renderHeaderRow","map","userElement","Home","nowDate","getMonth","getYear","getDaysInMonth","setSelectedDate","Container","fluid","Row","Col","newDate","Jumbotron","md","toLocaleDateString","year","LoginComponent","isRegistered","setIsRegistered","schema","yup","fName","when","is","required","lName","password","min","matches","passwordConfirm","oneOf","CheckMailExistence","values","useFormikContext","undefined","userExist","validationSchema","onSubmit","actions","Promise","resolve","reject","changeAuthStatus","handleLogin","setSubmitting","setFieldError","message","department","handleRegister","alert","initialValues","handleSubmit","handleChange","handleBlur","touched","isValid","errors","Form","noValidate","Group","as","controlId","Label","Control","type","placeholder","aria-describedby","name","value","onBlur","isInvalid","Feedback","Button","backgroundColor","disabled","LogoutComponent","profile","setProfile","resultat","event","Login","App","isAuth","setIsAuth","handleAuth","newState","global","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d68dc7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"header_navbar__2Md7_\",\"img\":\"header_img__1TnZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"HomeArray_th__1atYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"tickDay_td__vs5zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"userSchedule_td__3AU4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"global_global__1qDBh\"};","export default __webpack_public_path__ + \"static/media/logo.86b700a3.webp\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport styles from \"./header.module.css\";\r\nimport Logo from \"./logo.webp\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar className={styles.navbar} variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand>\r\n          <img className={styles.img} src={Logo} alt=\"logo\"></img>\r\n        </Navbar.Brand>\r\n      </LinkContainer>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <LinkContainer to=\"/\">\r\n            <Nav.Link className=\"mx-3\">Mon service</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/login\">\r\n            {props.loginStatus ? (\r\n              <Nav.Link className=\"mx-3\">Logout</Nav.Link>\r\n            ) : (\r\n              <Nav.Link className=\"mx-3\">Login</Nav.Link>\r\n            )}\r\n          </LinkContainer>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport locale from 'date-fns/locale/fr'\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n \r\n \r\nconst MonthPicker = (props) => {\r\n  \r\n\r\n  const handleChangeDate = (date) =>{\r\n    \r\n    props.handleChangeDate(date);\r\n    \r\n  }\r\n\r\n  return (\r\n    <DatePicker dateFormat=\"MMMM yyyy\" locale={locale} selected={props.selected} onChange={handleChangeDate} showMonthYearPicker />\r\n  );\r\n};\r\n\r\nexport default MonthPicker;\r\n","import React from \"react\";\r\nimport styles from \"./tickDay.module.css\";\r\n\r\nconst TickDay = (props) => {\r\n  const changeStatus = () => {\r\n    if (props.isClickable) {props.updateUser(props.user, props.selectedDate, props.indexJour,props.status)}\r\n  };\r\n\r\n  const changeStyle = () => {\r\n    switch (props.status) {\r\n      case 0:\r\n        return { background: \"white\" };\r\n\r\n      case 1:\r\n        return { background: \"yellow\" };\r\n\r\n      case 2:\r\n        return { background: \"rgb(93,191,212\" };\r\n      case 3:\r\n        return { background: \"black\" };\r\n\r\n      default:\r\n        return { background: \"white\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td className={styles.td} onClick={changeStatus} style={changeStyle()}></td>\r\n  );\r\n};\r\n\r\nexport default TickDay;\r\n","import React from \"react\";\r\nimport TickDay from \"./TickDay\";\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { isWeekend } from \"date-fns\";\r\nimport styles from \"./userSchedule.module.css\";\r\nimport parseISO from 'date-fns/parseISO'\r\n\r\n\r\nconst UserSchedule = (props) => {\r\n  const checkDayStatus = (indexJour, selectedDate, nonWorkingDays) => {\r\n    let currentCaseDate = new Date(Date.UTC(\r\n      selectedDate.indexOfYear,\r\n      selectedDate.indexOfMonth,\r\n      indexJour+1,  /**Attention le constructeur Date indexe les mois à 0 et les jours à 1 */\r\n    ));\r\n\r\n      //console.log(\"La date pour la case \"+indexJour+\" est \"+currentCaseDate);\r\n\r\n    if (isWeekend(currentCaseDate)) {\r\n      return 3;\r\n    }\r\n\r\n    for (let i = 0; i < nonWorkingDays.length; i++) {\r\n\r\n      //console.log(compareAsc(currentCaseDate, parseISO(nonWorkingDays[i].date)));\r\n      //console.log(nonWorkingDays[i].date);\r\n      //console.log(parseISO(nonWorkingDays[i].date));\r\n      if (!compareAsc(currentCaseDate, parseISO(nonWorkingDays[i].date))) {\r\n        return nonWorkingDays[i].status;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n\r\n  };\r\n\r\n  const renderRowContent = (user, selectedDate) => {\r\n    let tickDayArray = [];\r\n    let nonWorkingDays = user.nonWorkingDays;\r\n\r\n    for (let indexJour = 0; indexJour < selectedDate.nbDays; indexJour++) {\r\n      tickDayArray.push(\r\n        <TickDay\r\n          {...props}\r\n          key={uuidv4()}\r\n          indexJour={indexJour}\r\n          isClickable = {checkDayStatus(indexJour, selectedDate, nonWorkingDays)!==3 && props.user.isActive}\r\n          status={checkDayStatus(indexJour, selectedDate, nonWorkingDays)}\r\n        />\r\n      );\r\n    }\r\n    return tickDayArray;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.td}>\r\n        {props.user.firstName} {props.user.lastName}\r\n      </td>\r\n      {renderRowContent(props.user, props.selectedDate)}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default UserSchedule;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport UserSchedule from \"./UserSchedule\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport parseISO from \"date-fns/parseISO\";\r\nimport styles from \"./HomeArray.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst HomeArray = (props) => {\r\n  const history = useHistory();\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  //Fetch de la base de donnée avant chaque render et changement de l'état\r\n  useEffect(() => {\r\n  \r\n    if (props.currentAuth){\r\n      let department = \"GSS\";\r\n      fetch(\"/api/users/?department=\" + department, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          const userEmail = result.userEmail;\r\n          let loadedData = result.foundUsers;\r\n  \r\n          loadedData.forEach((element) => {\r\n            element.isActive = false;\r\n          });\r\n          const userIndex = loadedData.findIndex(\r\n            (element) => userEmail === element.email\r\n          );\r\n          loadedData[userIndex].isActive = true;\r\n          loadedData[userIndex] = loadedData.splice(\r\n            0,\r\n            1,\r\n            loadedData[userIndex]\r\n          )[0];\r\n  \r\n          setUserData(loadedData);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          history.push(\"/login\");\r\n        });\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const updateUser = (user, month, indexJour, previousStatus) => {\r\n    const userDataCopy = [...userData];\r\n\r\n    let newStatus = (previousStatus + 1) % 3;\r\n\r\n    const updateDate = new Date(\r\n      Date.UTC(month.indexOfYear, month.indexOfMonth, indexJour + 1)\r\n    );\r\n\r\n    const userIndex = userData.findIndex(\r\n      (element) => element.email === user.email\r\n    );\r\n\r\n    const jourPoseIndex = userData[userIndex].nonWorkingDays.findIndex(\r\n      (element) => compareAsc(parseISO(element.date), updateDate) === 0\r\n    );\r\n\r\n    if (jourPoseIndex !== -1) {\r\n      //Jour trouvé\r\n\r\n      if (newStatus !== 0) {\r\n        userDataCopy[userIndex].nonWorkingDays[jourPoseIndex] = {\r\n          date: updateDate.toISOString(),\r\n          status: newStatus,\r\n        };\r\n      } else {\r\n        userDataCopy[userIndex].nonWorkingDays.splice(jourPoseIndex, 1);\r\n      }\r\n    } else {\r\n      //Jour non trouvé\r\n\r\n      userDataCopy[userIndex].nonWorkingDays.push({\r\n        date: updateDate.toISOString(),\r\n        status: newStatus,\r\n      });\r\n    }\r\n\r\n    //console.log(userDataCopy);\r\n    //console.log(JSON.stringify(userDataCopy[userIndex]));\r\n\r\n    fetch(\"/api/users/\" + userDataCopy[userIndex].email, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        nonWorkingDays: userDataCopy[userIndex].nonWorkingDays,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          throw new Error(\"Identification rejetée\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        setUserData((previous) => userDataCopy);\r\n      })\r\n      .catch((err) => {\r\n        history.push(\"/login\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const renderHeaderRow = (nbDays) => {\r\n    const headerRowArray = [\r\n      <th key={uuidv4()} className={styles.th}>\r\n        Jour du Mois\r\n      </th>,\r\n    ];\r\n\r\n    for (let i = 0; i < nbDays; i++) {\r\n      headerRowArray.push(\r\n        <th key={uuidv4()} className={styles.th}>\r\n          {(i + 1).toLocaleString(\"en-US\", {\r\n            minimumIntegerDigits: 2,\r\n            useGrouping: false,\r\n          })}\r\n        </th>\r\n      );\r\n    }\r\n    return headerRowArray;\r\n  };\r\n\r\n  const renderTableContent = (user, selectedDate) => {\r\n    return user.map((userElement, userIndex) => (\r\n      <UserSchedule\r\n        key={userIndex}\r\n        user={userElement}\r\n        selectedDate={selectedDate}\r\n        updateUser={updateUser}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Table bordered hover responsive size=\"sm\">\r\n      <thead>\r\n        <tr>{renderHeaderRow(props.selectedDate.nbDays)}</tr>\r\n      </thead>\r\n      <tbody>{renderTableContent(userData, props.selectedDate)}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default HomeArray;\r\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport MonthPicker from \"../common/MonthPicker\";\nimport getDaysInMonth from \"date-fns/getDaysInMonth\";\nimport getMonth from \"date-fns/getMonth\";\nimport getYear from \"date-fns/getYear\";\nimport HomeArray from \"./components/HomeArray\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TickDay from \"./components/TickDay\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!props.currentAuth) {\n      history.push(\"/login\");\n    } \n  }, []);\n\n  const nowDate = new Date();\n  const [selectedDate, setSelectedDate] = useState({\n    indexOfMonth: getMonth(nowDate),\n    indexOfYear: getYear(nowDate),\n    nbDays: getDaysInMonth(nowDate),\n  });\n\n  const handleChangeDate = (newDate) => {\n    setSelectedDate({\n      indexOfMonth: getMonth(newDate),\n      indexOfYear: getYear(newDate),\n      nbDays: getDaysInMonth(newDate),\n    });\n  };\n  return (\n    <Container fluid className=\"mt-5\">\n      <Row className=\"my-5\">\n        <Col>\n          <MonthPicker\n            key={uuidv4()}\n            handleChangeDate={handleChangeDate}\n            selected={\n              new Date(\n                Date.UTC(selectedDate.indexOfYear, selectedDate.indexOfMonth)\n              )\n            }\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col>\n          <HomeArray key={uuidv4()} selectedDate={selectedDate} currentAuth={props.currentAuth} />\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col>\n          <Jumbotron fluid>\n            <Container>\n              <Row>\n                <Col md>\n                  <h1>\n                    {\" \"}\n                    Planning GSS{\" \"}\n                    {new Date(\n                      selectedDate.indexOfYear,\n                      selectedDate.indexOfMonth\n                    ).toLocaleDateString(\"fr-FR\", {\n                      year: \"numeric\",\n                      month: \"long\",\n                    })}\n                  </h1>\n                </Col>\n                <Col md></Col>\n                <Col md>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Jour sur site</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={0}\n                        />\n                      </tr>\n                      <tr>\n                        <td>Jour en télétravail</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={1}\n                          isClickable={false}\n                          status={1}\n                        />\n                      </tr>\n                      <tr>\n                        <td>Jour de congé</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={2}\n                        />\n                      </tr>\n                      <tr>\n                        <td>Week-end</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={3}\n                        />\n                      </tr>\n                    </tbody>\n                  </table>\n                </Col>\n              </Row>\n            </Container>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useFormikContext, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction LoginComponent(props) {\r\n\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const schema = yup.object({\r\n    fName: yup.string().when(\"$isRegistered\", {\r\n      is: true,\r\n      then: yup.string().required(\"obligatoire\"),\r\n    }),\r\n    lName: yup.string().when(\"$isRegistered\", {\r\n      is: true,\r\n      then: yup.string().required(\"obligatoire\"),\r\n    }),\r\n    email: yup\r\n      .string()\r\n      .email(\"Entrez une adresse valide\")\r\n      .required(\"Une adresse mail est requise\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"Champs obligatoire\")\r\n      .min(8, \"Au moins 8 caractères\")\r\n      .matches(/[a-z]/, \"Au moins une minuscule\")\r\n      .matches(/[A-Z]/, \"Au moins une majuscule\")\r\n      .matches(\r\n        /[a-zA-Z]+[^a-zA-Z\\s]+/,\r\n        \"Au moins un chiffre ou caractère spécial\"\r\n      ),\r\n    passwordConfirm: yup\r\n      .string()\r\n      .oneOf(\r\n        [yup.ref(\"password\"), null],\r\n        \"Les mots de passe doivent être identiques\"\r\n      ),\r\n  });\r\n  const CheckMailExistence = () => {\r\n    const { values } = useFormikContext();\r\n\r\n      if (values.email !== \"\") {\r\n        fetch(\"/api/users/status/\" + values.email)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              if (result !== undefined) {\r\n                setIsRegistered(result.userExist);\r\n              }\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n      }\r\n    \r\n\r\n    return null;\r\n  };\r\n\r\n  const handleRegister = (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          firstName: values.fName,\r\n          lastName: values.lName,\r\n          email: values.email,\r\n          department: \"GSS\",\r\n          password: values.password,\r\n          nonWorkingDays: [],\r\n        }),\r\n      })\r\n        .then(() => {\r\n          props.changeAuthStatus(true);\r\n          resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          reject(\r\n            new Error(\"Problème lors de l'enregistrement du nouvel utilisateur\")\r\n          );\r\n        });\r\n    });\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          email: values.email,\r\n          password: values.password,\r\n        }),\r\n      })\r\n        .then(() => {\r\n          props.changeAuthStatus(true);\r\n          resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          reject(new Error(\"Mauvais mot de passe\"));\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n          if (isRegistered) {\r\n            handleLogin(values)\r\n              .then(() => {\r\n                actions.setSubmitting(false);\r\n              })\r\n              .catch((error) => {\r\n                actions.setFieldError(\"password\", error.message);\r\n                actions.setSubmitting(false);\r\n              });\r\n          } else {\r\n            handleRegister(values)\r\n              .then(() => {\r\n                actions.setSubmitting(false);\r\n              })\r\n              .catch((error) => {\r\n                alert(error.message);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }\r\n        }}\r\n        initialValues={{\r\n          fName: \"\",\r\n          lName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          touched,\r\n          values,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <h1 className=\"mt-5\">\r\n              Bonjour {values.fName} {values.lName}\r\n            </h1>\r\n            <p className=\"my-3\">{values.email}</p>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationFormikUsermail\">\r\n                <Form.Label>Adresse mail</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse mail\"\r\n                  aria-describedby=\"Adresse mail\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.email && errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            {!isRegistered ? (\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikFname\">\r\n                  <Form.Label>Prénom</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"fName\"\r\n                    value={values.fName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.fName && errors.fName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.fName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikLname\">\r\n                  <Form.Label>Nom</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lName\"\r\n                    value={values.lName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.lName && errors.lName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Form.Row>\r\n            ) : null}\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormikPassword\">\r\n                <Form.Label>Mot de passe</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.password && errors.password}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              {!isRegistered ? (\r\n                <Form.Group\r\n                  as={Col}\r\n                  md=\"6\"\r\n                  controlId=\"validationFormikPasswordConfirm\"\r\n                >\r\n                  <Form.Label>Confirmation du mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"passwordConfirm\"\r\n                    value={values.passwordConfirm}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={\r\n                      touched.passwordConfirm && errors.passwordConfirm\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.passwordConfirm}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              ) : null}\r\n            </Form.Row>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              style={{backgroundColor:\"rgb(36,42,117)\"}}\r\n              disabled={isValid ? false : true}\r\n            >\r\n              {!isRegistered ? \"Inscription\" : \"Login\"}\r\n            </Button>\r\n            <CheckMailExistence />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction LogoutComponent(props) {\r\n  const handleLogout = (event) => {\r\n    fetch(\"/auth/logout\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then(() => {\r\n        props.changeAuthStatus(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Erreur de requete serveur en faisant le logout\");\r\n      });\r\n  };\r\n\r\n  const [profile, setProfile] = useState(\"Chargement...\");\r\n\r\n\r\n  //Fetch de la base de donnée avant chaque render et changement de l'état\r\n  useEffect(() => {\r\n\r\n    fetch(\"/api/users/loggeduser\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 401) {\r\n          throw new Error(\"Identification rejetée\");\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((resultat) => {\r\n        setProfile(\r\n          \"Vous êtes loggé comme \" +\r\n            resultat.firstName +\r\n            \" \" +\r\n            resultat.lastName +\r\n            \" (\" +\r\n            resultat.email +\r\n            \")\"\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        props.changeAuthStatus(false);\r\n      });\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"my-5 \">\r\n      <Row>\r\n        <Col className=\"mt-5\">\r\n          <h1 className=\"my-5 text-center\">{profile}</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          <Button\r\n            className=\"my-5\"\r\n            variant=\"primary\"\r\n            style={{ backgroundColor: \"rgb(36,42,117)\" }}\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LogoutComponent;\r\n","import React from \"react\";\r\nimport LoginComponent from \"./components/LoginComponent\";\r\nimport LogoutComponent from \"./components/LogoutComponent\";\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <div>\r\n      {props.currentAuth ? (\r\n        <LogoutComponent changeAuthStatus={props.changeAuthStatus} currentAuth={props.currentAuth}/>\r\n      ) : (\r\n        <LoginComponent changeAuthStatus={props.changeAuthStatus} currentAuth={props.currentAuth}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport Header from \"./common/Header\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Home/Home\";\nimport { useState } from \"react\";\nimport Login from \"./Login/Login\";\nimport styles from \"./global.module.css\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n\n  const handleAuth = (newState) => {\n    setIsAuth(newState);\n  };\n\n  useEffect(() => {\n    fetch(\"/auth/check\", {\n      method: \"GET\",\n      credentials: \"include\",\n    })\n      .then((res) => {\n        if (res.status === 401) {\n          throw new Error(\"Identification rejetée\");\n        }\n        setIsAuth(true);\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsAuth(false);\n      });\n  }, []);\n\n  return (\n    <div className={styles.global}>\n      <BrowserRouter>\n        <Header loginStatus={isAuth} />\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login changeAuthStatus={handleAuth} currentAuth={isAuth} />\n          </Route>\n          <Route exact path=\"/\">\n            <Home changeAuthStatus={handleAuth} currentAuth={isAuth} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}