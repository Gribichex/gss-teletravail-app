{"version":3,"sources":["common/header.module.css","Home/components/HomeArray.module.css","Home/components/tickDay.module.css","Home/components/userSchedule.module.css","global.module.css","common/logo.webp","common/Header.jsx","common/MonthPicker.jsx","Home/components/TickDay.jsx","Home/components/UserSchedule.jsx","Home/components/HomeArray.jsx","Home/Home.jsx","Login/components/LoginComponent.jsx","Login/components/LogoutComponent.jsx","Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","Navbar","className","styles","navbar","variant","to","Brand","img","src","Logo","alt","Nav","Link","loginStatus","MonthPicker","dateFormat","locale","selected","onChange","date","handleChangeDate","showMonthYearPicker","TickDay","td","onClick","isClickable","updateUser","user","selectedDate","indexJour","status","style","background","changeStyle","UserSchedule","checkDayStatus","nonWorkingDays","currentCaseDate","Date","UTC","indexOfYear","indexOfMonth","isWeekend","i","length","compareAsc","parseISO","firstName","lastName","tickDayArray","nbDays","push","key","uuidv4","isActive","renderRowContent","HomeArray","useState","userData","setUserData","authToken","localStorage","getItem","decodedToken","jwt_decode","useEffect","fetch","method","headers","Authorization","then","res","json","result","forEach","element","userIndex","findIndex","email","splice","error","console","log","month","previousStatus","userDataCopy","newStatus","updateDate","jourPoseIndex","toISOString","body","JSON","stringify","catch","err","previous","Table","bordered","hover","responsive","size","headerRowArray","th","toLocaleString","minimumIntegerDigits","useGrouping","renderHeaderRow","map","userElement","Home","nowDate","getMonth","getYear","getDaysInMonth","setSelectedDate","Container","fluid","Row","Col","newDate","Jumbotron","md","toLocaleDateString","year","LoginComponent","history","useHistory","isRegistered","setIsRegistered","schema","yup","fName","when","is","required","lName","password","min","matches","passwordConfirm","oneOf","CheckMailExistence","values","useFormikContext","undefined","userExist","validationSchema","onSubmit","actions","Promise","resolve","reject","response","data","setItem","token","changeAuthStatus","Error","handleLogin","setSubmitting","setFieldError","message","department","handleRegister","alert","initialValues","handleSubmit","handleChange","handleBlur","touched","isValid","errors","Form","noValidate","Group","as","controlId","Label","Control","type","placeholder","aria-describedby","name","value","onBlur","isInvalid","Feedback","Button","backgroundColor","disabled","LogoutComponent","profile","setProfile","resultat","event","removeItem","preventDefault","Login","currentAuth","App","isAuth","setIsAuth","PrivateRoute","Component","component","rest","render","global","exact","path","newState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13a7dddc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"header_navbar__2Md7_\",\"img\":\"header_img__1TnZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"HomeArray_th__1atYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"tickDay_td__vs5zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"userSchedule_td__3AU4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"global_global__1qDBh\"};","export default __webpack_public_path__ + \"static/media/logo.86b700a3.webp\";","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport styles from \"./header.module.css\";\r\nimport Logo from \"./logo.webp\"\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar className={styles.navbar} variant=\"dark\" >\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand ><img className={styles.img} src={Logo} alt=\"logo\"></img></Navbar.Brand>\r\n      </LinkContainer>\r\n\r\n      <Nav className=\"ml-auto\">\r\n        <LinkContainer to=\"/\">\r\n          <Nav.Link className=\"mx-3\">Mon service</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/login\">\r\n          {props.loginStatus ? (\r\n            <Nav.Link className=\"mx-3\">Logout</Nav.Link>\r\n          ) : (\r\n            <Nav.Link className=\"mx-3\">Login</Nav.Link>\r\n          )}\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport locale from 'date-fns/locale/fr'\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n \r\n \r\nconst MonthPicker = (props) => {\r\n  \r\n\r\n  const handleChangeDate = (date) =>{\r\n    \r\n    props.handleChangeDate(date);\r\n    \r\n  }\r\n\r\n  return (\r\n    <DatePicker dateFormat=\"MMMM yyyy\" locale={locale} selected={props.selected} onChange={handleChangeDate} showMonthYearPicker />\r\n  );\r\n};\r\n\r\nexport default MonthPicker;\r\n","import React from \"react\";\r\nimport styles from \"./tickDay.module.css\";\r\n\r\nconst TickDay = (props) => {\r\n  const changeStatus = () => {\r\n    if (props.isClickable) {props.updateUser(props.user, props.selectedDate, props.indexJour,props.status)}\r\n  };\r\n\r\n  const changeStyle = () => {\r\n    switch (props.status) {\r\n      case 0:\r\n        return { background: \"white\" };\r\n\r\n      case 1:\r\n        return { background: \"yellow\" };\r\n\r\n      case 2:\r\n        return { background: \"rgb(93,191,212\" };\r\n      case 3:\r\n        return { background: \"black\" };\r\n\r\n      default:\r\n        return { background: \"white\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td className={styles.td} onClick={changeStatus} style={changeStyle()}></td>\r\n  );\r\n};\r\n\r\nexport default TickDay;\r\n","import React from \"react\";\r\nimport TickDay from \"./TickDay\";\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { isWeekend } from \"date-fns\";\r\nimport styles from \"./userSchedule.module.css\";\r\nimport parseISO from 'date-fns/parseISO'\r\n\r\n\r\nconst UserSchedule = (props) => {\r\n  const checkDayStatus = (indexJour, selectedDate, nonWorkingDays) => {\r\n    let currentCaseDate = new Date(Date.UTC(\r\n      selectedDate.indexOfYear,\r\n      selectedDate.indexOfMonth,\r\n      indexJour+1,  /**Attention le constructeur Date indexe les mois à 0 et les jours à 1 */\r\n    ));\r\n\r\n      //console.log(\"La date pour la case \"+indexJour+\" est \"+currentCaseDate);\r\n\r\n    if (isWeekend(currentCaseDate)) {\r\n      return 3;\r\n    }\r\n\r\n    for (let i = 0; i < nonWorkingDays.length; i++) {\r\n\r\n      //console.log(compareAsc(currentCaseDate, parseISO(nonWorkingDays[i].date)));\r\n      //console.log(nonWorkingDays[i].date);\r\n      //console.log(parseISO(nonWorkingDays[i].date));\r\n      if (!compareAsc(currentCaseDate, parseISO(nonWorkingDays[i].date))) {\r\n        return nonWorkingDays[i].status;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n\r\n  };\r\n\r\n  const renderRowContent = (user, selectedDate) => {\r\n    let tickDayArray = [];\r\n    let nonWorkingDays = user.nonWorkingDays;\r\n\r\n    for (let indexJour = 0; indexJour < selectedDate.nbDays; indexJour++) {\r\n      tickDayArray.push(\r\n        <TickDay\r\n          {...props}\r\n          key={uuidv4()}\r\n          indexJour={indexJour}\r\n          isClickable = {checkDayStatus(indexJour, selectedDate, nonWorkingDays)!==3 && props.user.isActive}\r\n          status={checkDayStatus(indexJour, selectedDate, nonWorkingDays)}\r\n        />\r\n      );\r\n    }\r\n    return tickDayArray;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.td}>\r\n        {props.user.firstName} {props.user.lastName}\r\n      </td>\r\n      {renderRowContent(props.user, props.selectedDate)}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default UserSchedule;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport UserSchedule from \"./UserSchedule\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport parseISO from \"date-fns/parseISO\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport styles from \"./HomeArray.module.css\"\r\n\r\nconst HomeArray = (props) => {\r\n  const [userData, setUserData] = useState([]);\r\n  let authToken = localStorage.getItem(\"JWT\");\r\n  const decodedToken = jwt_decode(authToken);\r\n\r\n  //Fetch de la base de donnée avant chaque render et changement de l'état\r\n  useEffect(() => {\r\n    let department = \"GSS\";\r\n\r\n    fetch(\"/api/users/?department=\" + department, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then(\r\n        (result) => {\r\n\r\n         result.forEach((element)=>{\r\n           element.isActive = false;\r\n         })\r\n         const userIndex =  result.findIndex((element)=>decodedToken.email===element.email)\r\n         result[userIndex].isActive = true;\r\n         result[userIndex] = result.splice(0, 1, result[userIndex])[0];\r\n\r\n          setUserData(result);\r\n\r\n      //creation des stats\r\n         /*\r\n         nbDays = props.selectedDate.nbDays;\r\n\r\n          for (let i = 0; i < nbDays; i++) {\r\n            let currentDate = new Date(\r\n              Date.UTC(month.indexOfYear, month.indexOfMonth, indexJour + 1)\r\n            );\r\n          }\r\n\r\n          const reducer = (accumulator, currentValue, idx) =>\r\n            accumulator + currentValue.nonWorkingDays[idx];\r\n\r\n          result;\r\n          let chartData = result.map((element) => {\r\n            return element.isActive;*/\r\n\r\n            //{ name: \"Page A\", uv: 400, pv: 2400, amt: 2400 }*/\r\n\r\n\r\n        },\r\n        // Remarque : il faut gérer les erreurs ici plutôt que dans\r\n        // un bloc catch() afin que nous n’avalions pas les exceptions\r\n        // dues à de véritables bugs dans les composants.\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  },[]);\r\n\r\n  const updateUser = (user, month, indexJour, previousStatus) => {\r\n    const userDataCopy = [...userData];\r\n\r\n    let newStatus = (previousStatus + 1) % 3;\r\n\r\n    const updateDate = new Date(\r\n      Date.UTC(month.indexOfYear, month.indexOfMonth, indexJour + 1)\r\n    );\r\n\r\n    const userIndex = userData.findIndex(\r\n      (element) => element.email === user.email\r\n    );\r\n\r\n\r\n    const jourPoseIndex = userData[userIndex].nonWorkingDays.findIndex(\r\n      (element) => compareAsc(parseISO(element.date), updateDate) === 0\r\n    );\r\n\r\n    if (jourPoseIndex !== -1) {\r\n      //Jour trouvé\r\n\r\n      if (newStatus !== 0) {\r\n        userDataCopy[userIndex].nonWorkingDays[jourPoseIndex] = {\r\n          date: updateDate.toISOString(),\r\n          status: newStatus,\r\n        };\r\n      } else {\r\n        userDataCopy[userIndex].nonWorkingDays.splice(jourPoseIndex, 1);\r\n      }\r\n    } else {\r\n      //Jour non trouvé\r\n\r\n      userDataCopy[userIndex].nonWorkingDays.push({\r\n        date: updateDate.toISOString(),\r\n        status: newStatus,\r\n      });\r\n    }\r\n\r\n    //console.log(userDataCopy);\r\n    //console.log(JSON.stringify(userDataCopy[userIndex]));\r\n\r\n    fetch(\"/api/users/\" + userDataCopy[userIndex].email, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + authToken,\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        nonWorkingDays: userDataCopy[userIndex].nonWorkingDays,\r\n      }),\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n\r\n    setUserData((previous) => userDataCopy);\r\n  };\r\n\r\n  const renderHeaderRow = (nbDays) => {\r\n    const headerRowArray = [<th key={uuidv4()} className={styles.th} >Jour du Mois</th>];\r\n\r\n    for (let i = 0; i < nbDays; i++) {\r\n      headerRowArray.push(<th key={uuidv4()} className={styles.th}>{(i + 1).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}</th>);\r\n    }\r\n    return headerRowArray;\r\n  };\r\n\r\n  const renderTableContent = (user, selectedDate) => {\r\n    return user.map((userElement, userIndex) => (\r\n      <UserSchedule\r\n        key={userIndex}\r\n        user={userElement}\r\n        selectedDate={selectedDate}\r\n        updateUser={updateUser}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Table bordered hover responsive size=\"sm\">\r\n      <thead>\r\n        <tr>{renderHeaderRow(props.selectedDate.nbDays)}</tr>\r\n      </thead>\r\n      <tbody>{renderTableContent(userData, props.selectedDate)}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default HomeArray;\r\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport MonthPicker from \"../common/MonthPicker\";\nimport getDaysInMonth from \"date-fns/getDaysInMonth\";\nimport getMonth from \"date-fns/getMonth\";\nimport getYear from \"date-fns/getYear\";\nimport HomeArray from \"./components/HomeArray\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TickDay from \"./components/TickDay\";\n\nconst Home = (props) => {\n  const nowDate = new Date();\n  const [selectedDate, setSelectedDate] = useState({\n    indexOfMonth: getMonth(nowDate),\n    indexOfYear: getYear(nowDate),\n    nbDays: getDaysInMonth(nowDate),\n  });\n\n  const handleChangeDate = (newDate) => {\n    setSelectedDate({\n      indexOfMonth: getMonth(newDate),\n      indexOfYear: getYear(newDate),\n      nbDays: getDaysInMonth(newDate),\n    });\n  };\n  return (\n    <Container fluid className=\"mt-5\">\n      <Row className=\"my-5\">\n        <Col>\n          <MonthPicker\n            key={uuidv4()}\n            handleChangeDate={handleChangeDate}\n            selected={\n              new Date(\n                Date.UTC(selectedDate.indexOfYear, selectedDate.indexOfMonth)\n              )\n            }\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col>\n          <HomeArray selectedDate={selectedDate} />\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col>\n          <Jumbotron fluid>\n            <Container>\n              <Row>\n                <Col md>\n                  <h1>\n                    {\" \"}\n                    Planning GSS{\" \"}\n                    {new Date(\n                      selectedDate.indexOfYear,\n                      selectedDate.indexOfMonth\n                    ).toLocaleDateString(\"fr-FR\", {\n                      year: \"numeric\",\n                      month: \"long\",\n                    })}\n                  </h1>\n                </Col>\n                <Col md></Col>\n                <Col md>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Jour sur site</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={0}\n                        />\n                      </tr>\n                      <tr>\n                        <td>Jour en télétravail</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={1}\n                          isClickable={false}\n                          status={1}\n                        />\n                      </tr>\n                      <tr>\n                        <td>Jour de congé</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={2}\n                        />\n                      </tr>\n                      <tr>\n                        <td>Week-end</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={3}\n                        />\n                      </tr>\n                    </tbody>\n                  </table>\n                </Col>\n              </Row>\n            </Container>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useFormikContext, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction LoginComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const schema = yup.object({\r\n    fName: yup.string().when(\"$isRegistered\", {\r\n      is: true,\r\n      then: yup.string().required(\"obligatoire\"),\r\n    }),\r\n    lName: yup.string().when(\"$isRegistered\", {\r\n      is: true,\r\n      then: yup.string().required(\"obligatoire\"),\r\n    }),\r\n    email: yup\r\n      .string()\r\n      .email(\"Entrez une adresse valide\")\r\n      .required(\"Une adresse mail est requise\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"Champs obligatoire\")\r\n      .min(8, \"Au moins 8 caractères\")\r\n      .matches(/[a-z]/, \"Au moins une minuscule\")\r\n      .matches(/[A-Z]/, \"Au moins une majuscule\")\r\n      .matches(\r\n        /[a-zA-Z]+[^a-zA-Z\\s]+/,\r\n        \"Au moins un chiffre ou caractère spécial\"\r\n      ),\r\n    passwordConfirm: yup\r\n      .string()\r\n      .oneOf(\r\n        [yup.ref(\"password\"), null],\r\n        \"Les mots de passe doivent être identiques\"\r\n      ),\r\n  });\r\n  const CheckMailExistence = () => {\r\n    const { values } = useFormikContext();\r\n\r\n    useEffect(() => {\r\n      if (values.email !== \"\") {\r\n        fetch(\"/api/users/status/\" + values.email)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              if (result !== undefined) {\r\n                setIsRegistered(result.userExist);\r\n              }\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n      }\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleRegister = (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          firstName: values.fName,\r\n          lastName: values.lName,\r\n          email: values.email,\r\n          department: \"GSS\",\r\n          password: values.password,\r\n          nonWorkingDays: [],\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => localStorage.setItem(\"JWT\", data.token))\r\n        .then(() => {\r\n          props.changeAuthStatus(true);\r\n          resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          reject(\r\n            new Error(\"Problème lors de l'enregistrement du nouvel utilisateur\")\r\n          );\r\n        });\r\n    });\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: values.email,\r\n          password: values.password,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => localStorage.setItem(\"JWT\", data.token))\r\n        .then(() => {\r\n          props.changeAuthStatus(true);\r\n          resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          reject(new Error(\"Mauvais mot de passe\"));\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n          if (isRegistered) {\r\n            handleLogin(values)\r\n              .then(() => {\r\n                actions.setSubmitting(false);\r\n                history.push(\"/\");\r\n              })\r\n              .catch((error) => {\r\n                actions.setFieldError(\"password\", error.message);\r\n                actions.setSubmitting(false);\r\n              });\r\n          } else {\r\n            handleRegister(values)\r\n              .then(() => {\r\n                actions.setSubmitting(false);\r\n                history.push(\"/\");\r\n              })\r\n              .catch((error) => {\r\n                alert(error.message);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }\r\n        }}\r\n        initialValues={{\r\n          fName: \"\",\r\n          lName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          touched,\r\n          values,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <h1 className=\"mt-5\">\r\n              Bonjour {values.fName} {values.lName}\r\n            </h1>\r\n            <p className=\"my-3\">{values.email}</p>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationFormikUsermail\">\r\n                <Form.Label>Adresse mail</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse mail\"\r\n                  aria-describedby=\"Adresse mail\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.email && errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            {!isRegistered ? (\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikFname\">\r\n                  <Form.Label>Prénom</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"fName\"\r\n                    value={values.fName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.fName && errors.fName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.fName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikLname\">\r\n                  <Form.Label>Nom</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lName\"\r\n                    value={values.lName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.lName && errors.lName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Form.Row>\r\n            ) : null}\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormikPassword\">\r\n                <Form.Label>Mot de passe</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.password && errors.password}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              {!isRegistered ? (\r\n                <Form.Group\r\n                  as={Col}\r\n                  md=\"6\"\r\n                  controlId=\"validationFormikPasswordConfirm\"\r\n                >\r\n                  <Form.Label>Confirmation du mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"passwordConfirm\"\r\n                    value={values.passwordConfirm}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={\r\n                      touched.passwordConfirm && errors.passwordConfirm\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.passwordConfirm}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              ) : null}\r\n            </Form.Row>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              style={{backgroundColor:\"rgb(36,42,117)\"}}\r\n              disabled={isValid ? false : true}\r\n            >\r\n              {!isRegistered ? \"Inscription\" : \"Login\"}\r\n            </Button>\r\n            <CheckMailExistence />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction LogoutComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const handleLogout = (event) => {\r\n    localStorage.removeItem(\"JWT\");\r\n    props.changeAuthStatus(false);\r\n    history.push(\"/login\");\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [profile, setProfile] = useState({});\r\n  const authToken = localStorage.getItem(\"JWT\");\r\n  const decodedToken = jwt_decode(authToken);\r\n\r\n  //Fetch de la base de donnée avant chaque render et changement de l'état\r\n  useEffect(() => {\r\n    fetch(\"/api/users/\" + decodedToken.email, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((resultat) => {\r\n        setProfile(resultat);\r\n      })\r\n      .catch(\r\n        // Remarque : il faut gérer les erreurs ici plutôt que dans\r\n        // un bloc catch() afin que nous n’avalions pas les exceptions\r\n        // dues à de véritables bugs dans les composants.\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"my-5\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"my-5\">\r\n              Vous êtes loggé comme {profile.firstName} {profile.lastName} (\r\n              {profile.email})\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form onSubmit={handleLogout}>\r\n              <Button className=\"my-5\" variant=\"primary\" style={{backgroundColor:\"rgb(36,42,117)\"}} type=\"submit\">\r\n                Logout\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogoutComponent;\r\n","import React from \"react\";\r\nimport LoginComponent from \"./components/LoginComponent\";\r\nimport LogoutComponent from \"./components/LogoutComponent\";\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <div>\r\n      {props.currentAuth ? (\r\n        <LogoutComponent changeAuthStatus={props.changeAuthStatus} />\r\n      ) : (\r\n        <LoginComponent changeAuthStatus={props.changeAuthStatus} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport Header from \"./common/Header\";\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Home/Home\";\nimport { useState } from \"react\";\nimport Login from \"./Login/Login\";\nimport styles from \"./global.module.css\"\n\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n\n  const PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  };\n\n  const handleAuth = (newState) => {\n    setIsAuth(newState);\n  };\n\n  return (\n    <div className={styles.global}>\n      <BrowserRouter>\n        <Header loginStatus={isAuth} />\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login changeAuthStatus={handleAuth} currentAuth = {isAuth}/>\n          </Route>\n          <PrivateRoute exact path=\"/\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}