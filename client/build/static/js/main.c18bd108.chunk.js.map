{"version":3,"sources":["Home/components/tickDay.module.css","Home/components/userSchedule.module.css","common/Header.jsx","common/MonthPicker.jsx","Home/components/TickDay.jsx","Home/components/UserSchedule.jsx","Home/components/HomeArray.jsx","Home/Home.jsx","Login/components/LoginComponent.jsx","Login/components/LogoutComponent.jsx","Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","Navbar","bg","variant","to","Brand","Nav","className","Link","loginStatus","MonthPicker","dateFormat","locale","selected","onChange","date","handleChangeDate","showMonthYearPicker","TickDay","styles","td","onClick","isClickable","updateUser","user","selectedDate","indexJour","status","style","background","changeStyle","UserSchedule","checkDayStatus","nonWorkingDays","currentCaseDate","Date","UTC","indexOfYear","indexOfMonth","isWeekend","i","length","compareAsc","parseISO","firstName","lastName","tickDayArray","nbDays","push","key","uuidv4","isActive","renderRowContent","HomeArray","useState","userData","setUserData","authToken","localStorage","getItem","decodedToken","jwt_decode","useEffect","fetch","method","headers","Authorization","then","res","json","result","forEach","element","userIndex","findIndex","email","splice","error","console","log","month","previousStatus","userDataCopy","newStatus","updateDate","jourPoseIndex","toISOString","body","JSON","stringify","catch","err","previous","Table","bordered","hover","responsive","size","headerRowArray","renderHeaderRow","map","userElement","Home","nowDate","getMonth","getYear","getDaysInMonth","setSelectedDate","Container","fluid","Row","Col","newDate","Jumbotron","toLocaleDateString","year","LoginComponent","history","useHistory","isRegistered","setIsRegistered","schema","yup","fName","when","is","required","lName","password","min","matches","passwordConfirm","oneOf","CheckMailExistence","values","useFormikContext","undefined","userExist","validationSchema","onSubmit","actions","Promise","resolve","reject","response","data","setItem","token","changeAuthStatus","Error","handleLogin","setSubmitting","setFieldError","message","department","handleRegister","alert","initialValues","handleSubmit","handleChange","handleBlur","touched","isValid","errors","Form","noValidate","Group","as","controlId","Label","Control","type","placeholder","aria-describedby","name","value","onBlur","isInvalid","Feedback","md","Button","disabled","LogoutComponent","profile","setProfile","resultat","event","removeItem","preventDefault","Login","currentAuth","App","isAuth","setIsAuth","PrivateRoute","Component","component","rest","render","exact","path","newState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c18bd108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"tickDay_td__vs5zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"td\":\"userSchedule_td__3AU4d\"};","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand>Thales</Navbar.Brand>\r\n      </LinkContainer>\r\n\r\n      <Nav className=\"mr-auto\">\r\n        <LinkContainer to=\"/\">\r\n          <Nav.Link>Mon service</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/login\">\r\n          {props.loginStatus ? (\r\n            <Nav.Link>Logout</Nav.Link>\r\n          ) : (\r\n            <Nav.Link>Login</Nav.Link>\r\n          )}\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport locale from 'date-fns/locale/fr'\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n \r\n \r\nconst MonthPicker = (props) => {\r\n  \r\n\r\n  const handleChangeDate = (date) =>{\r\n    \r\n    props.handleChangeDate(date);\r\n    \r\n  }\r\n\r\n  return (\r\n    <DatePicker dateFormat=\"MMMM yyyy\" locale={locale} selected={props.selected} onChange={handleChangeDate} showMonthYearPicker />\r\n  );\r\n};\r\n\r\nexport default MonthPicker;\r\n","import React from \"react\";\r\nimport styles from \"./tickDay.module.css\";\r\n\r\nconst TickDay = (props) => {\r\n  const changeStatus = () => {\r\n    if (props.isClickable) {props.updateUser(props.user, props.selectedDate, props.indexJour,props.status)}\r\n  };\r\n\r\n  const changeStyle = () => {\r\n    switch (props.status) {\r\n      case 0:\r\n        return { background: \"white\" };\r\n\r\n      case 1:\r\n        return { background: \"yellow\" };\r\n\r\n      case 2:\r\n        return { background: \"green\" };\r\n      case 3:\r\n        return { background: \"black\" };\r\n\r\n      default:\r\n        return { background: \"white\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td className={styles.td} onClick={changeStatus} style={changeStyle()}></td>\r\n  );\r\n};\r\n\r\nexport default TickDay;\r\n","import React from \"react\";\r\nimport TickDay from \"./TickDay\";\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { isWeekend } from \"date-fns\";\r\nimport styles from \"./userSchedule.module.css\";\r\nimport parseISO from 'date-fns/parseISO'\r\n\r\n\r\nconst UserSchedule = (props) => {\r\n  const checkDayStatus = (indexJour, selectedDate, nonWorkingDays) => {\r\n    let currentCaseDate = new Date(Date.UTC(\r\n      selectedDate.indexOfYear,\r\n      selectedDate.indexOfMonth,\r\n      indexJour+1,  /**Attention le constructeur Date indexe les mois à 0 et les jours à 1 */\r\n    ));\r\n\r\n      //console.log(\"La date pour la case \"+indexJour+\" est \"+currentCaseDate);\r\n\r\n    if (isWeekend(currentCaseDate)) {\r\n      return 3;\r\n    }\r\n\r\n    for (let i = 0; i < nonWorkingDays.length; i++) {\r\n\r\n      //console.log(compareAsc(currentCaseDate, parseISO(nonWorkingDays[i].date)));\r\n      //console.log(nonWorkingDays[i].date);\r\n      //console.log(parseISO(nonWorkingDays[i].date));\r\n      if (!compareAsc(currentCaseDate, parseISO(nonWorkingDays[i].date))) {\r\n        return nonWorkingDays[i].status;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n\r\n  };\r\n\r\n  const renderRowContent = (user, selectedDate) => {\r\n    let tickDayArray = [];\r\n    let nonWorkingDays = user.nonWorkingDays;\r\n\r\n    for (let indexJour = 0; indexJour < selectedDate.nbDays; indexJour++) {\r\n      tickDayArray.push(\r\n        <TickDay\r\n          {...props}\r\n          key={uuidv4()}\r\n          indexJour={indexJour}\r\n          isClickable = {checkDayStatus(indexJour, selectedDate, nonWorkingDays)!==3 && props.user.isActive}\r\n          status={checkDayStatus(indexJour, selectedDate, nonWorkingDays)}\r\n        />\r\n      );\r\n    }\r\n    return tickDayArray;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className={styles.td}>\r\n        {props.user.firstName} {props.user.lastName}\r\n      </td>\r\n      {renderRowContent(props.user, props.selectedDate)}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default UserSchedule;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport UserSchedule from \"./UserSchedule\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport parseISO from \"date-fns/parseISO\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nconst HomeArray = (props) => {\r\n  const [userData, setUserData] = useState([]);\r\n  let authToken = localStorage.getItem(\"JWT\");\r\n  const decodedToken = jwt_decode(authToken);\r\n\r\n  //Fetch de la base de donnée avant chaque render et changement de l'état\r\n  useEffect(() => {\r\n    let department = \"GSS\";\r\n\r\n    fetch(\"/api/users/?department=\" + department, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then(\r\n        (result) => {\r\n\r\n         result.forEach((element)=>{\r\n           element.isActive = false;\r\n         })\r\n         const userIndex =  result.findIndex((element)=>decodedToken.email===element.email)\r\n         result[userIndex].isActive = true;\r\n         result[userIndex] = result.splice(0, 1, result[userIndex])[0];\r\n\r\n          setUserData(result);\r\n        },\r\n        // Remarque : il faut gérer les erreurs ici plutôt que dans\r\n        // un bloc catch() afin que nous n’avalions pas les exceptions\r\n        // dues à de véritables bugs dans les composants.\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  },[]);\r\n\r\n  const updateUser = (user, month, indexJour, previousStatus) => {\r\n    const userDataCopy = [...userData];\r\n\r\n    let newStatus = (previousStatus + 1) % 3;\r\n\r\n    const updateDate = new Date(\r\n      Date.UTC(month.indexOfYear, month.indexOfMonth, indexJour + 1)\r\n    );\r\n\r\n    const userIndex = userData.findIndex(\r\n      (element) => element.email === user.email\r\n    );\r\n\r\n\r\n    const jourPoseIndex = userData[userIndex].nonWorkingDays.findIndex(\r\n      (element) => compareAsc(parseISO(element.date), updateDate) === 0\r\n    );\r\n\r\n    if (jourPoseIndex !== -1) {\r\n      //Jour trouvé\r\n\r\n      if (newStatus !== 0) {\r\n        userDataCopy[userIndex].nonWorkingDays[jourPoseIndex] = {\r\n          date: updateDate.toISOString(),\r\n          status: newStatus,\r\n        };\r\n      } else {\r\n        userDataCopy[userIndex].nonWorkingDays.splice(jourPoseIndex, 1);\r\n      }\r\n    } else {\r\n      //Jour non trouvé\r\n\r\n      userDataCopy[userIndex].nonWorkingDays.push({\r\n        date: updateDate.toISOString(),\r\n        status: newStatus,\r\n      });\r\n    }\r\n\r\n    //console.log(userDataCopy);\r\n    //console.log(JSON.stringify(userDataCopy[userIndex]));\r\n\r\n    fetch(\"/api/users/\" + userDataCopy[userIndex].email, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + authToken,\r\n      },\r\n\r\n      body: JSON.stringify({\r\n        nonWorkingDays: userDataCopy[userIndex].nonWorkingDays,\r\n      }),\r\n    }).catch(function (err) {\r\n      console.log(err);\r\n    });\r\n\r\n    setUserData((previous) => userDataCopy);\r\n  };\r\n\r\n  const renderHeaderRow = (nbDays) => {\r\n    const headerRowArray = [<th key={uuidv4()}>Jour du Mois</th>];\r\n\r\n    for (let i = 0; i < nbDays; i++) {\r\n      headerRowArray.push(<th key={uuidv4()}>{i + 1}</th>);\r\n    }\r\n    return headerRowArray;\r\n  };\r\n\r\n  const renderTableContent = (user, selectedDate) => {\r\n    return user.map((userElement, userIndex) => (\r\n      <UserSchedule\r\n        key={userIndex}\r\n        user={userElement}\r\n        selectedDate={selectedDate}\r\n        updateUser={updateUser}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Table bordered hover responsive size=\"sm\">\r\n      <thead>\r\n        <tr>{renderHeaderRow(props.selectedDate.nbDays)}</tr>\r\n      </thead>\r\n      <tbody>{renderTableContent(userData, props.selectedDate)}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default HomeArray;\r\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport MonthPicker from \"../common/MonthPicker\";\nimport getDaysInMonth from \"date-fns/getDaysInMonth\";\nimport getMonth from \"date-fns/getMonth\";\nimport getYear from \"date-fns/getYear\";\nimport HomeArray from \"./components/HomeArray\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TickDay from \"./components/TickDay\";\nconst Home = (props) => {\n  const nowDate = new Date();\n\n  const [selectedDate, setSelectedDate] = useState({\n    indexOfMonth: getMonth(nowDate),\n    indexOfYear: getYear(nowDate),\n    nbDays: getDaysInMonth(nowDate),\n  });\n\n  const handleChangeDate = (newDate) => {\n    setSelectedDate({\n      indexOfMonth: getMonth(newDate),\n      indexOfYear: getYear(newDate),\n      nbDays: getDaysInMonth(newDate),\n    });\n  };\n  return (\n    <Container fluid className=\"mt-5\">\n      <Row className=\"my-5\">\n        <Col>\n          <MonthPicker\n            key={uuidv4()}\n            handleChangeDate={handleChangeDate}\n            selected={\n              new Date(\n                Date.UTC(selectedDate.indexOfYear, selectedDate.indexOfMonth)\n              )\n            }\n          />\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col>\n          <HomeArray selectedDate={selectedDate} />\n        </Col>\n      </Row>\n      <Row className=\"my-5\">\n        <Col>\n          <Jumbotron fluid>\n            <Container>\n              <Row>\n                <Col>\n                  <h1>\n                    {\" \"}\n                    Planning GSS{\" \"}\n                    {new Date(\n                      selectedDate.indexOfYear,\n                      selectedDate.indexOfMonth\n                    ).toLocaleDateString(\"fr-FR\", {\n                      year: \"numeric\",\n                      month: \"long\",\n                    })}\n                  </h1>\n                </Col>\n<Col></Col>\n\n                <Col>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>Jour sur site</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={0}\n                        />\n                      </tr>\n                      <tr>\n                      <td>Jour en télétravail</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={1}\n                          isClickable={false}\n                          status={1}\n                        />\n                      </tr>\n                      <tr>\n                      <td>Jour de congé</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={2}\n                        />\n                      </tr>\n                      <tr>\n                      <td>Week-end</td>\n                        <TickDay\n                          {...props}\n                          key={uuidv4()}\n                          indexJour={0}\n                          isClickable={false}\n                          status={3}\n                        />\n                        </tr>\n                    </tbody>\n                  </table>\n                </Col>\n              </Row>\n            </Container>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useFormikContext, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction LoginComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const schema = yup.object({\r\n    fName: yup.string().when(\"$isRegistered\", {\r\n      is: true,\r\n      then: yup.string().required(\"obligatoire\"),\r\n    }),\r\n    lName: yup.string().when(\"$isRegistered\", {\r\n      is: true,\r\n      then: yup.string().required(\"obligatoire\"),\r\n    }),\r\n    email: yup\r\n      .string()\r\n      .email(\"Entrez une adresse valide\")\r\n      .required(\"Une adresse mail est requise\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"Champs obligatoire\")\r\n      .min(8, \"Au moins 8 caractères\")\r\n      .matches(/[a-z]/, \"Au moins une minuscule\")\r\n      .matches(/[A-Z]/, \"Au moins une majuscule\")\r\n      .matches(\r\n        /[a-zA-Z]+[^a-zA-Z\\s]+/,\r\n        \"Au moins un chiffre ou caractère spécial\"\r\n      ),\r\n    passwordConfirm: yup\r\n      .string()\r\n      .oneOf(\r\n        [yup.ref(\"password\"), null],\r\n        \"Les mots de passe doivent être identiques\"\r\n      ),\r\n  });\r\n  const CheckMailExistence = () => {\r\n    const { values } = useFormikContext();\r\n\r\n    useEffect(() => {\r\n      if (values.email !== \"\") {\r\n        fetch(\"/api/users/status/\" + values.email)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (result) => {\r\n              if (result !== undefined) {\r\n                setIsRegistered(result.userExist);\r\n              }\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n      }\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleRegister = (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          firstName: values.fName,\r\n          lastName: values.lName,\r\n          email: values.email,\r\n          department: \"GSS\",\r\n          password: values.password,\r\n          nonWorkingDays: [],\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => localStorage.setItem(\"JWT\", data.token))\r\n        .then(() => {\r\n          props.changeAuthStatus(true);\r\n          resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          reject(\r\n            new Error(\"Problème lors de l'enregistrement du nouvel utilisateur\")\r\n          );\r\n        });\r\n    });\r\n  };\r\n\r\n  const handleLogin = (values) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(\"/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: values.email,\r\n          password: values.password,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => localStorage.setItem(\"JWT\", data.token))\r\n        .then(() => {\r\n          props.changeAuthStatus(true);\r\n          resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          reject(new Error(\"Mauvais mot de passe\"));\r\n        });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={(values, actions) => {\r\n          if (isRegistered) {\r\n            handleLogin(values)\r\n              .then(() => {\r\n                actions.setSubmitting(false);\r\n                history.push(\"/\");\r\n              })\r\n              .catch((error) => {\r\n                actions.setFieldError(\"password\", error.message);\r\n                actions.setSubmitting(false);\r\n              });\r\n          } else {\r\n            handleRegister(values)\r\n              .then(() => {\r\n                actions.setSubmitting(false);\r\n                history.push(\"/\");\r\n              })\r\n              .catch((error) => {\r\n                alert(error.message);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }\r\n        }}\r\n        initialValues={{\r\n          fName: \"\",\r\n          lName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordConfirm: \"\",\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          touched,\r\n          values,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <h1 className=\"mt-5\">\r\n              Bonjour {values.fName} {values.lName}\r\n            </h1>\r\n            <p className=\"my-3\">{values.email}</p>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationFormikUsermail\">\r\n                <Form.Label>Adresse mail</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse mail\"\r\n                  aria-describedby=\"Adresse mail\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.email && errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            {!isRegistered ? (\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikFname\">\r\n                  <Form.Label>Prénom</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"fName\"\r\n                    value={values.fName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.fName && errors.fName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.fName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikLname\">\r\n                  <Form.Label>Nom</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lName\"\r\n                    value={values.lName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={touched.lName && errors.lName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Form.Row>\r\n            ) : null}\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationFormikPassword\">\r\n                <Form.Label>Mot de passe</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  isInvalid={touched.password && errors.password}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              {!isRegistered ? (\r\n                <Form.Group\r\n                  as={Col}\r\n                  md=\"6\"\r\n                  controlId=\"validationFormikPasswordConfirm\"\r\n                >\r\n                  <Form.Label>Confirmation du mot de passe</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"passwordConfirm\"\r\n                    value={values.passwordConfirm}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isInvalid={\r\n                      touched.passwordConfirm && errors.passwordConfirm\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.passwordConfirm}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              ) : null}\r\n            </Form.Row>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              disabled={isValid ? false : true}\r\n            >\r\n              {!isRegistered ? \"Inscription\" : \"Login\"}\r\n            </Button>\r\n            <CheckMailExistence />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction LogoutComponent(props) {\r\n  const history = useHistory();\r\n\r\n  const handleLogout = (event) => {\r\n    localStorage.removeItem(\"JWT\");\r\n    props.changeAuthStatus(false);\r\n    history.push(\"/login\");\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [profile, setProfile] = useState({});\r\n  const authToken = localStorage.getItem(\"JWT\");\r\n  const decodedToken = jwt_decode(authToken);\r\n\r\n  //Fetch de la base de donnée avant chaque render et changement de l'état\r\n  useEffect(() => {\r\n    fetch(\"/api/users/\" + decodedToken.email, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + authToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((resultat) => {\r\n        setProfile(resultat);\r\n      })\r\n      .catch(\r\n        // Remarque : il faut gérer les erreurs ici plutôt que dans\r\n        // un bloc catch() afin que nous n’avalions pas les exceptions\r\n        // dues à de véritables bugs dans les composants.\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"my-5\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"my-5\">\r\n              Vous êtes loggé comme {profile.firstName} {profile.lastName} (\r\n              {profile.email})\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form onSubmit={handleLogout}>\r\n              <Button className=\"my-5\" variant=\"primary\" type=\"submit\">\r\n                Logout\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogoutComponent;\r\n","import React from \"react\";\r\nimport LoginComponent from \"./components/LoginComponent\";\r\nimport LogoutComponent from \"./components/LogoutComponent\";\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <div>\r\n      {props.currentAuth ? (\r\n        <LogoutComponent changeAuthStatus={props.changeAuthStatus} />\r\n      ) : (\r\n        <LoginComponent changeAuthStatus={props.changeAuthStatus} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport Header from \"./common/Header\";\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Home/Home\";\nimport { useState } from \"react\";\nimport Login from \"./Login/Login\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n\n  const PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  };\n\n  const handleAuth = (newState) => {\n    setIsAuth(newState);\n  };\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Header loginStatus={isAuth} />\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login changeAuthStatus={handleAuth} currentAuth = {isAuth}/>\n          </Route>\n          <PrivateRoute exact path=\"/\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}